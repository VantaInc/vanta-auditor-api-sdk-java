/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.vanta.vanta_auditor_api.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.vanta.vanta_auditor_api.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class FrameworkSection {

    @JsonProperty("frameworkId")
    private FrameworkSectionFrameworkId frameworkId;


    @JsonProperty("sectionId")
    private String sectionId;

    @JsonCreator
    public FrameworkSection(
            @JsonProperty("frameworkId") FrameworkSectionFrameworkId frameworkId,
            @JsonProperty("sectionId") String sectionId) {
        Utils.checkNotNull(frameworkId, "frameworkId");
        Utils.checkNotNull(sectionId, "sectionId");
        this.frameworkId = frameworkId;
        this.sectionId = sectionId;
    }

    @JsonIgnore
    public FrameworkSectionFrameworkId frameworkId() {
        return frameworkId;
    }

    @JsonIgnore
    public String sectionId() {
        return sectionId;
    }

    public static Builder builder() {
        return new Builder();
    }


    public FrameworkSection withFrameworkId(FrameworkSectionFrameworkId frameworkId) {
        Utils.checkNotNull(frameworkId, "frameworkId");
        this.frameworkId = frameworkId;
        return this;
    }

    public FrameworkSection withSectionId(String sectionId) {
        Utils.checkNotNull(sectionId, "sectionId");
        this.sectionId = sectionId;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FrameworkSection other = (FrameworkSection) o;
        return 
            Utils.enhancedDeepEquals(this.frameworkId, other.frameworkId) &&
            Utils.enhancedDeepEquals(this.sectionId, other.sectionId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            frameworkId, sectionId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(FrameworkSection.class,
                "frameworkId", frameworkId,
                "sectionId", sectionId);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private FrameworkSectionFrameworkId frameworkId;

        private String sectionId;

        private Builder() {
          // force use of static builder() method
        }


        public Builder frameworkId(FrameworkSectionFrameworkId frameworkId) {
            Utils.checkNotNull(frameworkId, "frameworkId");
            this.frameworkId = frameworkId;
            return this;
        }


        public Builder sectionId(String sectionId) {
            Utils.checkNotNull(sectionId, "sectionId");
            this.sectionId = sectionId;
            return this;
        }

        public FrameworkSection build() {

            return new FrameworkSection(
                frameworkId, sectionId);
        }

    }
}
