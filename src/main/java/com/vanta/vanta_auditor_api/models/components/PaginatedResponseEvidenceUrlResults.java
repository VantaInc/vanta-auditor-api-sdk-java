/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.vanta.vanta_auditor_api.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.vanta.vanta_auditor_api.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;


public class PaginatedResponseEvidenceUrlResults {

    @JsonProperty("data")
    private List<EvidenceUrl> data;

    /**
     * Provides information about the pagination of a dataset.
     */
    @JsonProperty("pageInfo")
    private PageInfo pageInfo;

    @JsonCreator
    public PaginatedResponseEvidenceUrlResults(
            @JsonProperty("data") List<EvidenceUrl> data,
            @JsonProperty("pageInfo") PageInfo pageInfo) {
        Utils.checkNotNull(data, "data");
        Utils.checkNotNull(pageInfo, "pageInfo");
        this.data = data;
        this.pageInfo = pageInfo;
    }

    @JsonIgnore
    public List<EvidenceUrl> data() {
        return data;
    }

    /**
     * Provides information about the pagination of a dataset.
     */
    @JsonIgnore
    public PageInfo pageInfo() {
        return pageInfo;
    }

    public static Builder builder() {
        return new Builder();
    }


    public PaginatedResponseEvidenceUrlResults withData(List<EvidenceUrl> data) {
        Utils.checkNotNull(data, "data");
        this.data = data;
        return this;
    }

    /**
     * Provides information about the pagination of a dataset.
     */
    public PaginatedResponseEvidenceUrlResults withPageInfo(PageInfo pageInfo) {
        Utils.checkNotNull(pageInfo, "pageInfo");
        this.pageInfo = pageInfo;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PaginatedResponseEvidenceUrlResults other = (PaginatedResponseEvidenceUrlResults) o;
        return 
            Utils.enhancedDeepEquals(this.data, other.data) &&
            Utils.enhancedDeepEquals(this.pageInfo, other.pageInfo);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            data, pageInfo);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PaginatedResponseEvidenceUrlResults.class,
                "data", data,
                "pageInfo", pageInfo);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private List<EvidenceUrl> data;

        private PageInfo pageInfo;

        private Builder() {
          // force use of static builder() method
        }


        public Builder data(List<EvidenceUrl> data) {
            Utils.checkNotNull(data, "data");
            this.data = data;
            return this;
        }


        /**
         * Provides information about the pagination of a dataset.
         */
        public Builder pageInfo(PageInfo pageInfo) {
            Utils.checkNotNull(pageInfo, "pageInfo");
            this.pageInfo = pageInfo;
            return this;
        }

        public PaginatedResponseEvidenceUrlResults build() {

            return new PaginatedResponseEvidenceUrlResults(
                data, pageInfo);
        }

    }
}
