/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.vanta.vanta_auditor_api.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import com.vanta.vanta_auditor_api.utils.LazySingletonValue;
import com.vanta.vanta_auditor_api.utils.Utils;
import java.lang.Exception;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;

public class ListAuditControlsRequestBuilder {

    private String auditId;
    private Optional<Integer> pageSize = Utils.readDefaultOrConstValue(
                            "pageSize",
                            "10",
                            new TypeReference<Optional<Integer>>() {});
    private Optional<String> pageCursor = Optional.empty();
    private final SDKMethodInterfaces.MethodCallListAuditControls sdk;

    public ListAuditControlsRequestBuilder(SDKMethodInterfaces.MethodCallListAuditControls sdk) {
        this.sdk = sdk;
    }

    public ListAuditControlsRequestBuilder auditId(String auditId) {
        Utils.checkNotNull(auditId, "auditId");
        this.auditId = auditId;
        return this;
    }
                
    public ListAuditControlsRequestBuilder pageSize(int pageSize) {
        Utils.checkNotNull(pageSize, "pageSize");
        this.pageSize = Optional.of(pageSize);
        return this;
    }

    public ListAuditControlsRequestBuilder pageSize(Optional<Integer> pageSize) {
        Utils.checkNotNull(pageSize, "pageSize");
        this.pageSize = pageSize;
        return this;
    }
                
    public ListAuditControlsRequestBuilder pageCursor(String pageCursor) {
        Utils.checkNotNull(pageCursor, "pageCursor");
        this.pageCursor = Optional.of(pageCursor);
        return this;
    }

    public ListAuditControlsRequestBuilder pageCursor(Optional<String> pageCursor) {
        Utils.checkNotNull(pageCursor, "pageCursor");
        this.pageCursor = pageCursor;
        return this;
    }

    public ListAuditControlsResponse call() throws Exception {
        if (pageSize == null) {
            pageSize = _SINGLETON_VALUE_PageSize.value();
        }
        return sdk.listControls(
            auditId,
            pageSize,
            pageCursor);
    }

    private static final LazySingletonValue<Optional<Integer>> _SINGLETON_VALUE_PageSize =
            new LazySingletonValue<>(
                    "pageSize",
                    "10",
                    new TypeReference<Optional<Integer>>() {});
}
