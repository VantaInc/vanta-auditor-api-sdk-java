/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.vanta.vanta_auditor_api.models.operations;

import com.vanta.vanta_auditor_api.models.components.AddAuditorInput;
import com.vanta.vanta_auditor_api.models.components.AddCommentInput;
import com.vanta.vanta_auditor_api.models.components.AuditEvidenceUpdateInput;
import com.vanta.vanta_auditor_api.models.components.CreateCustomControlInput;
import com.vanta.vanta_auditor_api.models.components.CreateCustomEvidenceRequestInput;
import java.lang.Exception;
import java.lang.Integer;
import java.lang.String;
import java.time.OffsetDateTime;
import java.util.Optional;

public class SDKMethodInterfaces {

    public interface MethodCallListAudits {
        ListAuditsResponse list(
            Optional<Integer> pageSize,
            Optional<String> pageCursor,
            Optional<OffsetDateTime> changedSinceDate) throws Exception;
    }

    public interface MethodCallListAuditEvidenceUrls {
        ListAuditEvidenceUrlsResponse getEvidenceUrls(
            String auditId,
            String auditEvidenceId,
            Optional<Integer> pageSize,
            Optional<String> pageCursor) throws Exception;
    }

    public interface MethodCallListAuditEvidence {
        ListAuditEvidenceResponse listEvidence(
            String auditId,
            Optional<Integer> pageSize,
            Optional<String> pageCursor,
            Optional<OffsetDateTime> changedSinceDate) throws Exception;
    }

    public interface MethodCallListAuditComments {
        ListAuditCommentsResponse listComments(
            String auditId,
            Optional<Integer> pageSize,
            Optional<String> pageCursor,
            Optional<OffsetDateTime> changedSinceDate) throws Exception;
    }

    public interface MethodCallListAuditControls {
        ListAuditControlsResponse listControls(
            String auditId,
            Optional<Integer> pageSize,
            Optional<String> pageCursor) throws Exception;
    }

    public interface MethodCallCreateCommentForAuditEvidence {
        CreateCommentForAuditEvidenceResponse createCommentForEvidence(
            String auditId,
            String auditEvidenceId,
            AddCommentInput addCommentInput) throws Exception;
    }

    public interface MethodCallUpdateAuditEvidence {
        UpdateAuditEvidenceResponse updateEvidence(
            String auditId,
            String auditEvidenceId,
            AuditEvidenceUpdateInput auditEvidenceUpdateInput) throws Exception;
    }

    public interface MethodCallCreateCustomEvidenceRequest {
        CreateCustomEvidenceRequestResponse createCustomEvidenceRequest(
            String auditId,
            CreateCustomEvidenceRequestInput createCustomEvidenceRequestInput) throws Exception;
    }

    public interface MethodCallCreateCustomControl {
        CreateCustomControlResponse createCustomControl(
            String auditId,
            CreateCustomControlInput createCustomControlInput) throws Exception;
    }

    public interface MethodCallCreateAuditor {
        CreateAuditorResponse create(
            AddAuditorInput request) throws Exception;
    }
}
