/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.vanta.vanta_auditor_api.models.operations.async;

import static com.vanta.vanta_auditor_api.operations.Operations.AsyncRequestOperation;

import com.vanta.vanta_auditor_api.SDKConfiguration;
import com.vanta.vanta_auditor_api.models.components.AddAuditorInput;
import com.vanta.vanta_auditor_api.operations.CreateAuditor;
import com.vanta.vanta_auditor_api.utils.Headers;
import com.vanta.vanta_auditor_api.utils.Utils;
import java.lang.Exception;
import java.util.concurrent.CompletableFuture;

public class CreateAuditorRequestBuilder {

    private AddAuditorInput request;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public CreateAuditorRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public CreateAuditorRequestBuilder request(AddAuditorInput request) {
        Utils.checkNotNull(request, "request");
        this.request = request;
        return this;
    }

    public CompletableFuture<CreateAuditorResponse> call() throws Exception {
        
        AsyncRequestOperation<AddAuditorInput, CreateAuditorResponse> operation
              = new CreateAuditor.Async(sdkConfiguration, _headers);

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
