/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.vanta.vanta_auditor_api;

import static com.vanta.vanta_auditor_api.operations.Operations.RequestOperation;

import com.vanta.vanta_auditor_api.models.components.AddAuditorInput;
import com.vanta.vanta_auditor_api.models.operations.CreateAuditorRequestBuilder;
import com.vanta.vanta_auditor_api.models.operations.CreateAuditorResponse;
import com.vanta.vanta_auditor_api.operations.CreateAuditor;
import com.vanta.vanta_auditor_api.utils.Headers;
import java.lang.Exception;


public class Auditors {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncAuditors asyncSDK;

    Auditors(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncAuditors(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncAuditors async() {
        return asyncSDK;
    }

    /**
     * Create an auditor
     * 
     * <p>Create an auditor in Vanta.
     * 
     * @return The call builder
     */
    public CreateAuditorRequestBuilder create() {
        return new CreateAuditorRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an auditor
     * 
     * <p>Create an auditor in Vanta.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateAuditorResponse create(AddAuditorInput request) throws Exception {
        RequestOperation<AddAuditorInput, CreateAuditorResponse> operation
              = new CreateAuditor.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
