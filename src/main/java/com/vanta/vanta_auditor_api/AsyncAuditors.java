/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.vanta.vanta_auditor_api;

import static com.vanta.vanta_auditor_api.operations.Operations.AsyncRequestOperation;

import com.vanta.vanta_auditor_api.models.components.AddAuditorInput;
import com.vanta.vanta_auditor_api.models.operations.async.CreateAuditorRequestBuilder;
import com.vanta.vanta_auditor_api.models.operations.async.CreateAuditorResponse;
import com.vanta.vanta_auditor_api.operations.CreateAuditor;
import com.vanta.vanta_auditor_api.utils.Headers;
import java.util.concurrent.CompletableFuture;


public class AsyncAuditors {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Auditors syncSDK;

    AsyncAuditors(Auditors syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Auditors sync() {
        return syncSDK;
    }


    /**
     * Create an auditor
     * 
     * <p>Create an auditor in Vanta.
     * 
     * @return The async call builder
     */
    public CreateAuditorRequestBuilder create() {
        return new CreateAuditorRequestBuilder(sdkConfiguration);
    }

    /**
     * Create an auditor
     * 
     * <p>Create an auditor in Vanta.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateAuditorResponse&gt; - The async response
     */
    public CompletableFuture<CreateAuditorResponse> create(AddAuditorInput request) {
        AsyncRequestOperation<AddAuditorInput, CreateAuditorResponse> operation
              = new CreateAuditor.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
